DROP DATABASE IF EXISTS alkemy_wallet;

CREATE DATABASE IF NOT EXISTS alkemy_wallet;

USE alkemy_wallet;

CREATE TABLE IF NOT EXISTS ROLES(
	ID BIGINT AUTO_INCREMENT NOT NULL,
    ROLE_NAME VARCHAR(10) NOT NULL,
    DESCRIPT VARCHAR(100),
    CREATION_DATE TIMESTAMP,
    UPDATE_DATE TIMESTAMP,
    CONSTRAINT PK_roles_id PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS USERS(
	ID BIGINT AUTO_INCREMENT NOT NULL,
	FIRST_NAME VARCHAR(20) NOT NULL,
    LAST_NAME VARCHAR(30) NOT NULL,
    EMAIL VARCHAR(50) NOT NULL,
    USER_PASSWORD VARCHAR(255) NOT NULL,
    ROLE_ID BIGINT NOT NULL,
    CREATION_DATE TIMESTAMP,
    UPDATE_DATE TIMESTAMP,
    SOFT_DELETE BIT NOT NULL,
    CONSTRAINT PK_users_id PRIMARY KEY (ID),
    CONSTRAINT FK_users_role_id FOREIGN KEY (ROLE_ID) REFERENCES alkemy_wallet.roles(ID)
);

ALTER TABLE USERS
ADD CONSTRAINT UQ_users_email UNIQUE (EMAIL);

CREATE TABLE IF NOT EXISTS ACCOUNTS(
	ID BIGINT AUTO_INCREMENT NOT NULL,
	CURRENCY VARCHAR(5) NOT NULL,
    TRANSACTION_LIMIT DOUBLE NOT NULL,
    BALANCE DOUBLE NOT NULL,
    USER_ID BIGINT NOT NULL,
    CREATION_DATE TIMESTAMP,
    UPDATE_DATE TIMESTAMP,
    SOFT_DELETE BIT NOT NULL,
    CONSTRAINT PK_accounts_id PRIMARY KEY (ID),
    CONSTRAINT FK_accounts_user_id FOREIGN KEY (USER_ID) REFERENCES alkemy_wallet.users(ID)
);

CREATE TABLE IF NOT EXISTS TRANSACTIONS(
	ID BIGINT AUTO_INCREMENT NOT NULL,
	AMOUNT DOUBLE NOT NULL, 
    TYPE_TRANSACTION VARCHAR(30) NOT NULL,
    DESCRIPT VARCHAR(255),
    ACCOUNT_ID BIGINT NOT NULL,
    TRANSACTION_DATE TIMESTAMP,
	CONSTRAINT PK_transactions_id PRIMARY KEY (ID),
    CONSTRAINT FK_transactions_account_id FOREIGN KEY (ACCOUNT_ID) REFERENCES alkemy_wallet.accounts(ID)
);

CREATE TABLE IF NOT EXISTS FIXED_TERM_DEPOSITS(
	ID BIGINT AUTO_INCREMENT NOT NULL,
	AMOUNT DOUBLE NOT NULL,
    ACCOUNT_ID BIGINT NOT NULL,
    INTEREST DOUBLE NOT NULL,
    USER_ID BIGINT NOT NULL,
    CREATION_DATE TIMESTAMP,
    CLOSING_DATE TIMESTAMP,
    CONSTRAINT PK_fixed_term_deposits_id PRIMARY KEY (ID),
    CONSTRAINT FK_fixed_term_deposits_account_id FOREIGN KEY (ACCOUNT_ID) REFERENCES alkemy_wallet.accounts(ID),
    CONSTRAINT FK_fixed_term_deposits_user_id FOREIGN KEY (USER_ID) REFERENCES alkemy_wallet.users(ID)
);